

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jul 03 15:08:20 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     000D                     	;# 
   186     000E                     	;# 
   187     000E                     	;# 
   188     000F                     	;# 
   189     0010                     	;# 
   190     0011                     	;# 
   191     0012                     	;# 
   192     0013                     	;# 
   193     0014                     	;# 
   194     0015                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0017                     	;# 
   198     0018                     	;# 
   199     0019                     	;# 
   200     001A                     	;# 
   201     001B                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     001D                     	;# 
   205     001E                     	;# 
   206     001F                     	;# 
   207     0081                     	;# 
   208     0085                     	;# 
   209     0086                     	;# 
   210     0087                     	;# 
   211     0088                     	;# 
   212     0089                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     0091                     	;# 
   217     0092                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232                           
   233                           	psect	nvCOMMON
   234     0075                     __pnvCOMMON:
   235     0075                     _uart_rd:
   236     0075                     	ds	1
   237     0006                     _PORTBbits	set	6
   238     0018                     _RCSTAbits	set	24
   239     0007                     _PORTC	set	7
   240     0006                     _PORTB	set	6
   241     001F                     _ADCON0	set	31
   242     001A                     _RCREG	set	26
   243     0019                     _TXREG	set	25
   244     0065                     _RCIF	set	101
   245     0098                     _TXSTAbits	set	152
   246     0099                     _SPBRG	set	153
   247     0087                     _TRISC	set	135
   248     0086                     _TRISB	set	134
   249     009F                     _ADCON1	set	159
   250     009C                     _CMCON	set	156
   251     04C1                     _TRMT	set	1217
   252                           
   253                           	psect	strings
   254     0003                     __pstrings:
   255     0003                     stringtab:
   256     0003                     __stringtab:
   257     0003                     stringcode:	
   258                           ;	String table - string pointers are 1 byte each
   259                           
   260     0003                     stringdir:
   261     0003  3000               	movlw	high stringdir
   262     0004  008A               	movwf	10
   263     0005  0804               	movf	4,w
   264     0006  0A84               	incf	4,f
   265     0007  0782               	addwf	2,f
   266     0008                     __stringbase:
   267     0008  3400               	retlw	0
   268     0009                     __end_of__stringtab:
   269     0009                     STR_2:
   270     0009  3444               	retlw	68	;'D'
   271     000A  3445               	retlw	69	;'E'
   272     000B  3453               	retlw	83	;'S'
   273     000C  344C               	retlw	76	;'L'
   274     000D  3449               	retlw	73	;'I'
   275     000E  3447               	retlw	71	;'G'
   276     000F  3441               	retlw	65	;'A'
   277     0010  3444               	retlw	68	;'D'
   278     0011  344F               	retlw	79	;'O'
   279     0012  3400               	retlw	0
   280     000C                     
   281                           	psect	cinit
   282     07FC                     start_initialization:	
   283                           ; #config settings
   284                           
   285     07FC                     __initialization:
   286     07FC                     end_of_initialization:	
   287                           ;End of C runtime variable initialization code
   288                           
   289     07FC                     __end_of__initialization:
   290     07FC  0183               	clrf	3
   291     07FD  120A  118A  2FA9   	ljmp	_main	;jump to C main() function
   292                           
   293                           	psect	cstackCOMMON
   294     0070                     __pcstackCOMMON:
   295     0070                     ?_UART_Write:
   296     0070                     ??_UART_Write:	
   297                           ; 1 bytes @ 0x0
   298                           
   299     0070                     ?_UART_Write_ln:	
   300                           ; 1 bytes @ 0x0
   301                           
   302     0070                     ?_UART_Write_Text:	
   303                           ; 1 bytes @ 0x0
   304                           
   305     0070                     ?_UART_Write_Text_ln:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_UART_Read:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ??_UART_Read:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_main:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     UART_Write@data:	
   318                           ; 1 bytes @ 0x0
   319                           
   320                           
   321                           ; 1 bytes @ 0x0
   322     0070                     	ds	1
   323     0071                     ??_UART_Write_ln:
   324     0071                     ??_UART_Write_Text:	
   325                           ; 1 bytes @ 0x1
   326                           
   327     0071                     UART_Write_ln@data:	
   328                           ; 1 bytes @ 0x1
   329                           
   330     0071                     UART_Write_Text@i:	
   331                           ; 1 bytes @ 0x1
   332                           
   333                           
   334                           ; 2 bytes @ 0x1
   335     0071                     	ds	2
   336     0073                     UART_Write_Text@text:
   337                           
   338                           ; 1 bytes @ 0x3
   339     0073                     	ds	1
   340     0074                     ??_UART_Write_Text_ln:
   341     0074                     UART_Write_Text_ln@text:	
   342                           ; 1 bytes @ 0x4
   343                           
   344                           
   345                           ; 1 bytes @ 0x4
   346     0074                     	ds	1
   347     0075                     ??_main:
   348                           
   349                           	psect	maintext
   350     07A9                     __pmaintext:	
   351                           ; 1 bytes @ 0x5
   352 ;;
   353 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   354 ;;
   355 ;; *************** function _main *****************
   356 ;; Defined at:
   357 ;;		line 18 in file "main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   366 ;; Tracked objects:
   367 ;;		On entry : B00/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   371 ;;      Params:         0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0
   374 ;;      Totals:         0       0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels required when called: 3
   377 ;; This function calls:
   378 ;;		_UART_Read
   379 ;;		_UART_Write_Text_ln
   380 ;;		_UART_Write_ln
   381 ;; This function is called by:
   382 ;;		Startup code after reset
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386     07A9                     _main:	
   387                           ;psect for function _main
   388                           
   389     07A9                     l720:	
   390                           ;incstack = 0
   391                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   392                           
   393                           
   394                           ;main.c: 19:     CMCON = 0x07;
   395     07A9  3007               	movlw	7
   396     07AA  1683               	bsf	3,5	;RP0=1, select bank1
   397     07AB  1303               	bcf	3,6	;RP1=0, select bank1
   398     07AC  009C               	movwf	28	;volatile
   399     07AD                     l722:
   400                           
   401                           ;main.c: 20:     ADCON0 = 0x00;
   402     07AD  1283               	bcf	3,5	;RP0=0, select bank0
   403     07AE  1303               	bcf	3,6	;RP1=0, select bank0
   404     07AF  019F               	clrf	31	;volatile
   405     07B0                     l724:
   406                           
   407                           ;main.c: 21:     ADCON1 = 0x06;
   408     07B0  3006               	movlw	6
   409     07B1  1683               	bsf	3,5	;RP0=1, select bank1
   410     07B2  1303               	bcf	3,6	;RP1=0, select bank1
   411     07B3  009F               	movwf	31	;volatile
   412                           
   413                           ;main.c: 23:     TRISB = 0x00;
   414     07B4  0186               	clrf	6	;volatile
   415     07B5                     l726:
   416                           
   417                           ;main.c: 24:     TRISC = 0x80;
   418     07B5  3080               	movlw	128
   419     07B6  0087               	movwf	7	;volatile
   420     07B7                     l728:
   421                           
   422                           ;main.c: 25:     PORTB = 0x00;
   423     07B7  1283               	bcf	3,5	;RP0=0, select bank0
   424     07B8  1303               	bcf	3,6	;RP1=0, select bank0
   425     07B9  0186               	clrf	6	;volatile
   426     07BA                     l730:
   427                           
   428                           ;main.c: 26:     PORTC = 0x00;
   429     07BA  0187               	clrf	7	;volatile
   430     07BB                     l732:
   431                           
   432                           ;main.c: 29:     SPBRG = 31;
   433     07BB  301F               	movlw	31
   434     07BC  1683               	bsf	3,5	;RP0=1, select bank1
   435     07BD  1303               	bcf	3,6	;RP1=0, select bank1
   436     07BE  0099               	movwf	25	;volatile
   437     07BF                     l734:
   438                           
   439                           ;main.c: 30:     TXSTAbits.SYNC = 0;
   440     07BF  1218               	bcf	24,4	;volatile
   441     07C0                     l736:
   442                           
   443                           ;main.c: 31:     TXSTAbits.TXEN = 1;
   444     07C0  1698               	bsf	24,5	;volatile
   445     07C1                     l738:
   446                           
   447                           ;main.c: 32:     RCSTAbits.SPEN = 1;
   448     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   449     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   450     07C3  1798               	bsf	24,7	;volatile
   451     07C4                     l740:
   452                           
   453                           ;main.c: 33:     RCSTAbits.CREN = 1;
   454     07C4  1618               	bsf	24,4	;volatile
   455     07C5                     l742:
   456                           
   457                           ;main.c: 36:         uart_rd = UART_Read();
   458     07C5  120A  118A  2748  120A  118A  	fcall	_UART_Read
   459     07CA  00F5               	movwf	_uart_rd
   460     07CB                     l744:
   461                           
   462                           ;main.c: 37:         if(uart_rd == 100){
   463     07CB  3064               	movlw	100
   464     07CC  0675               	xorwf	_uart_rd,w
   465     07CD  1D03               	btfss	3,2
   466     07CE  2FD0               	goto	u91
   467     07CF  2FD1               	goto	u90
   468     07D0                     u91:
   469     07D0  2FE2               	goto	l754
   470     07D1                     u90:
   471     07D1                     l746:
   472                           
   473                           ;main.c: 38:             UART_Write_ln(uart_rd);
   474     07D1  0875               	movf	_uart_rd,w
   475     07D2  120A  118A  2770  120A  118A  	fcall	_UART_Write_ln
   476     07D7                     l748:
   477                           
   478                           ;main.c: 39:             UART_Write_Text_ln("LIGADO");
   479     07D7  3004               	movlw	(low (((STR_2+3)-__stringbase)| (0+32768)))& (0+255)
   480     07D8  120A  118A  275C  120A  118A  	fcall	_UART_Write_Text_ln
   481     07DD                     l750:
   482                           
   483                           ;main.c: 40:             uart_rd = 0;
   484     07DD  01F5               	clrf	_uart_rd
   485     07DE                     l752:
   486                           
   487                           ;main.c: 41:             PORTBbits.RB5 = 1;
   488     07DE  1283               	bcf	3,5	;RP0=0, select bank0
   489     07DF  1303               	bcf	3,6	;RP1=0, select bank0
   490     07E0  1686               	bsf	6,5	;volatile
   491                           
   492                           ;main.c: 42:         }
   493     07E1  2FC5               	goto	l742
   494     07E2                     l754:
   495     07E2  30FE               	movlw	254
   496     07E3  0675               	xorwf	_uart_rd,w
   497     07E4  1D03               	btfss	3,2
   498     07E5  2FE7               	goto	u101
   499     07E6  2FE8               	goto	u100
   500     07E7                     u101:
   501     07E7  2FC5               	goto	l742
   502     07E8                     u100:
   503     07E8                     l756:
   504                           
   505                           ;main.c: 44:             UART_Write_ln(uart_rd);
   506     07E8  0875               	movf	_uart_rd,w
   507     07E9  120A  118A  2770  120A  118A  	fcall	_UART_Write_ln
   508     07EE                     l758:
   509                           
   510                           ;main.c: 45:             UART_Write_Text_ln("DESLIGADO");
   511     07EE  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   512     07EF  120A  118A  275C  120A  118A  	fcall	_UART_Write_Text_ln
   513     07F4                     l760:
   514                           
   515                           ;main.c: 46:             uart_rd = 0;
   516     07F4  01F5               	clrf	_uart_rd
   517     07F5                     l762:
   518                           
   519                           ;main.c: 47:             PORTBbits.RB5 = 0;
   520     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   521     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   522     07F7  1286               	bcf	6,5	;volatile
   523     07F8  2FC5               	goto	l742
   524     07F9  120A  118A  2800   	ljmp	start
   525     07FC                     __end_of_main:
   526                           
   527                           	psect	text1
   528     0770                     __ptext1:	
   529 ;; *************** function _UART_Write_ln *****************
   530 ;; Defined at:
   531 ;;		line 8 in file "EUSART.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;  data            1    wreg     const unsigned char 
   534 ;; Auto vars:     Size  Location     Type
   535 ;;  data            1    1[COMMON] const unsigned char 
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0, pclath, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         0       0       0       0       0
   546 ;;      Locals:         1       0       0       0       0
   547 ;;      Temps:          0       0       0       0       0
   548 ;;      Totals:         1       0       0       0       0
   549 ;;Total ram usage:        1 bytes
   550 ;; Hardware stack levels used: 1
   551 ;; Hardware stack levels required when called: 1
   552 ;; This function calls:
   553 ;;		_UART_Write
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559     0770                     _UART_Write_ln:	
   560                           ;psect for function _UART_Write_ln
   561                           
   562                           
   563                           ;incstack = 0
   564                           ; Regs used in _UART_Write_ln: [wreg+status,2+status,0+pclath+cstack]
   565                           ;UART_Write_ln@data stored from wreg
   566     0770  00F1               	movwf	UART_Write_ln@data
   567     0771                     l634:
   568                           
   569                           ;EUSART.c: 9:     UART_Write(data);
   570     0771  0871               	movf	UART_Write_ln@data,w
   571     0772  120A  118A  2750  120A  118A  	fcall	_UART_Write
   572                           
   573                           ;EUSART.c: 10:     UART_Write('\r');
   574     0777  300D               	movlw	13
   575     0778  120A  118A  2750  120A  118A  	fcall	_UART_Write
   576                           
   577                           ;EUSART.c: 11:     UART_Write('\n');
   578     077D  300A               	movlw	10
   579     077E  120A  118A  2750  120A  118A  	fcall	_UART_Write
   580     0783                     l17:
   581     0783  0008               	return
   582     0784                     __end_of_UART_Write_ln:
   583                           
   584                           	psect	text2
   585     075C                     __ptext2:	
   586 ;; *************** function _UART_Write_Text_ln *****************
   587 ;; Defined at:
   588 ;;		line 21 in file "EUSART.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;  text            1    wreg     PTR const unsigned char 
   591 ;;		 -> STR_2(10), STR_1(7), 
   592 ;; Auto vars:     Size  Location     Type
   593 ;;  text            1    4[COMMON] PTR const unsigned char 
   594 ;;		 -> STR_2(10), STR_1(7), 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         1       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0
   607 ;;      Totals:         1       0       0       0       0
   608 ;;Total ram usage:        1 bytes
   609 ;; Hardware stack levels used: 1
   610 ;; Hardware stack levels required when called: 2
   611 ;; This function calls:
   612 ;;		_UART_Write
   613 ;;		_UART_Write_Text
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619     075C                     _UART_Write_Text_ln:	
   620                           ;psect for function _UART_Write_Text_ln
   621                           
   622                           
   623                           ;incstack = 0
   624                           ; Regs used in _UART_Write_Text_ln: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   625                           ;UART_Write_Text_ln@text stored from wreg
   626     075C  00F4               	movwf	UART_Write_Text_ln@text
   627     075D                     l714:
   628                           
   629                           ;EUSART.c: 22:     UART_Write_Text(text);
   630     075D  0874               	movf	UART_Write_Text_ln@text,w
   631     075E  120A  118A  2784  120A  118A  	fcall	_UART_Write_Text
   632     0763                     l716:
   633                           
   634                           ;EUSART.c: 23:     UART_Write('\r');
   635     0763  300D               	movlw	13
   636     0764  120A  118A  2750  120A  118A  	fcall	_UART_Write
   637     0769                     l718:
   638                           
   639                           ;EUSART.c: 24:     UART_Write('\n');
   640     0769  300A               	movlw	10
   641     076A  120A  118A  2750  120A  118A  	fcall	_UART_Write
   642     076F                     l26:
   643     076F  0008               	return
   644     0770                     __end_of_UART_Write_Text_ln:
   645                           
   646                           	psect	text3
   647     0784                     __ptext3:	
   648 ;; *************** function _UART_Write_Text *****************
   649 ;; Defined at:
   650 ;;		line 14 in file "EUSART.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;  text            1    wreg     PTR const unsigned char 
   653 ;;		 -> STR_2(10), STR_1(7), 
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  text            1    3[COMMON] PTR const unsigned char 
   656 ;;		 -> STR_2(10), STR_1(7), 
   657 ;;  i               2    1[COMMON] int 
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   667 ;;      Params:         0       0       0       0       0
   668 ;;      Locals:         3       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0
   670 ;;      Totals:         3       0       0       0       0
   671 ;;Total ram usage:        3 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; Hardware stack levels required when called: 1
   674 ;; This function calls:
   675 ;;		_UART_Write
   676 ;; This function is called by:
   677 ;;		_UART_Write_Text_ln
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681     0784                     _UART_Write_Text:	
   682                           ;psect for function _UART_Write_Text
   683                           
   684                           
   685                           ;incstack = 0
   686                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   687                           ;UART_Write_Text@text stored from wreg
   688     0784  00F3               	movwf	UART_Write_Text@text
   689     0785                     l706:
   690                           
   691                           ;EUSART.c: 15:     int i;;EUSART.c: 16:     for(i=0;text[i]!='\0';i++){
   692     0785  01F1               	clrf	UART_Write_Text@i
   693     0786  01F2               	clrf	UART_Write_Text@i+1
   694     0787  2F9B               	goto	l712
   695     0788                     l708:
   696                           
   697                           ;EUSART.c: 17:         UART_Write(text[i]);
   698     0788  0871               	movf	UART_Write_Text@i,w
   699     0789  0773               	addwf	UART_Write_Text@text,w
   700     078A  0084               	movwf	4
   701     078B  120A  118A  2003  120A  118A  	fcall	stringdir
   702     0790  120A  118A  2750  120A  118A  	fcall	_UART_Write
   703     0795                     l710:
   704                           
   705                           ;EUSART.c: 18:     }
   706     0795  3001               	movlw	1
   707     0796  07F1               	addwf	UART_Write_Text@i,f
   708     0797  1803               	skipnc
   709     0798  0AF2               	incf	UART_Write_Text@i+1,f
   710     0799  3000               	movlw	0
   711     079A  07F2               	addwf	UART_Write_Text@i+1,f
   712     079B                     l712:
   713     079B  0871               	movf	UART_Write_Text@i,w
   714     079C  0773               	addwf	UART_Write_Text@text,w
   715     079D  0084               	movwf	4
   716     079E  120A  118A  2003  120A  118A  	fcall	stringdir
   717     07A3  3A00               	xorlw	0
   718     07A4  1D03               	skipz
   719     07A5  2FA7               	goto	u81
   720     07A6  2FA8               	goto	u80
   721     07A7                     u81:
   722     07A7  2F88               	goto	l708
   723     07A8                     u80:
   724     07A8                     l23:
   725     07A8  0008               	return
   726     07A9                     __end_of_UART_Write_Text:
   727                           
   728                           	psect	text4
   729     0750                     __ptext4:	
   730 ;; *************** function _UART_Write *****************
   731 ;; Defined at:
   732 ;;		line 3 in file "EUSART.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  data            1    wreg     const unsigned char 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  data            1    0[COMMON] const unsigned char 
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       0       0       0       0
   747 ;;      Locals:         1       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0
   749 ;;      Totals:         1       0       0       0       0
   750 ;;Total ram usage:        1 bytes
   751 ;; Hardware stack levels used: 1
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_UART_Write_ln
   756 ;;		_UART_Write_Text
   757 ;;		_UART_Write_Text_ln
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761     0750                     _UART_Write:	
   762                           ;psect for function _UART_Write
   763                           
   764                           
   765                           ;incstack = 0
   766                           ; Regs used in _UART_Write: [wreg]
   767                           ;UART_Write@data stored from wreg
   768     0750  00F0               	movwf	UART_Write@data
   769     0751                     l622:
   770     0751                     l11:	
   771                           ;EUSART.c: 4:     while(!TRMT);
   772                           
   773     0751  1683               	bsf	3,5	;RP0=1, select bank1
   774     0752  1303               	bcf	3,6	;RP1=0, select bank1
   775     0753  1C98               	btfss	24,1	;volatile
   776     0754  2F56               	goto	u11
   777     0755  2F57               	goto	u10
   778     0756                     u11:
   779     0756  2F51               	goto	l11
   780     0757                     u10:
   781     0757                     l624:
   782                           
   783                           ;EUSART.c: 5:     TXREG = data;
   784     0757  0870               	movf	UART_Write@data,w
   785     0758  1283               	bcf	3,5	;RP0=0, select bank0
   786     0759  1303               	bcf	3,6	;RP1=0, select bank0
   787     075A  0099               	movwf	25	;volatile
   788     075B                     l14:
   789     075B  0008               	return
   790     075C                     __end_of_UART_Write:
   791                           
   792                           	psect	text5
   793     0748                     __ptext5:	
   794 ;; *************** function _UART_Read *****************
   795 ;; Defined at:
   796 ;;		line 27 in file "EUSART.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      unsigned char 
   803 ;; Registers used:
   804 ;;		wreg
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0
   813 ;;      Totals:         0       0       0       0       0
   814 ;;Total ram usage:        0 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_main
   820 ;;		_UART_Read_Text
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824     0748                     _UART_Read:	
   825                           ;psect for function _UART_Read
   826                           
   827     0748                     l642:	
   828                           ;incstack = 0
   829                           ; Regs used in _UART_Read: [wreg]
   830                           
   831     0748                     l29:	
   832                           ;EUSART.c: 28:     while(!RCIF);
   833                           
   834     0748  1283               	bcf	3,5	;RP0=0, select bank0
   835     0749  1303               	bcf	3,6	;RP1=0, select bank0
   836     074A  1E8C               	btfss	12,5	;volatile
   837     074B  2F4D               	goto	u31
   838     074C  2F4E               	goto	u30
   839     074D                     u31:
   840     074D  2F48               	goto	l29
   841     074E                     u30:
   842     074E                     l644:
   843                           
   844                           ;EUSART.c: 29:     return RCREG;
   845     074E  081A               	movf	26,w	;volatile
   846     074F                     l32:
   847     074F  0008               	return
   848     0750                     __end_of_UART_Read:
   849     007E                     btemp	set	126	;btemp
   850     007E                     wtemp0	set	126
   851                           
   852                           	psect	idloc
   853                           
   854                           ;Config register IDLOC0 @ 0x2000
   855                           ;	unspecified, using default values
   856     2000                     	org	8192
   857     2000  3FFF               	dw	16383
   858                           
   859                           ;Config register IDLOC1 @ 0x2001
   860                           ;	unspecified, using default values
   861     2001                     	org	8193
   862     2001  3FFF               	dw	16383
   863                           
   864                           ;Config register IDLOC2 @ 0x2002
   865                           ;	unspecified, using default values
   866     2002                     	org	8194
   867     2002  3FFF               	dw	16383
   868                           
   869                           ;Config register IDLOC3 @ 0x2003
   870                           ;	unspecified, using default values
   871     2003                     	org	8195
   872     2003  3FFF               	dw	16383
   873                           
   874                           	psect	config
   875                           
   876                           ;Config register CONFIG @ 0x2007
   877                           ;	Oscillator Selection bits
   878                           ;	FOSC = HS, HS oscillator
   879                           ;	Watchdog Timer Enable bit
   880                           ;	WDTE = OFF, WDT disabled
   881                           ;	Power-up Timer Enable bit
   882                           ;	PWRTE = OFF, PWRT disabled
   883                           ;	Brown-out Reset Enable bit
   884                           ;	BOREN = OFF, BOR disabled
   885                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   886                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   887                           ;	Data EEPROM Memory Code Protection bit
   888                           ;	CPD = OFF, Data EEPROM code protection off
   889                           ;	Flash Program Memory Write Enable bits
   890                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   891                           ;	In-Circuit Debugger Mode bit
   892                           ;	DEBUG = 0x1, unprogrammed default
   893                           ;	Flash Program Memory Code Protection bit
   894                           ;	CP = OFF, Code protection off
   895     2007                     	org	8199
   896     2007  3F3A               	dw	16186

Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Write_Text@text	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[7]), STR_2(CODE[10]), 

    UART_Write_Text_ln@text	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[7]), STR_2(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_UART_Write_Text_ln
    _UART_Write_ln->_UART_Write
    _UART_Write_Text_ln->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     271
                          _UART_Read
                 _UART_Write_Text_ln
                      _UART_Write_ln
 ---------------------------------------------------------------------------------
 (1) _UART_Write_ln                                        1     1      0      30
                                              1 COMMON     1     1      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text_ln                                   1     1      0     241
                                              4 COMMON     1     1      0
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      3     3      0     138
                                              1 COMMON     3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Read
   _UART_Write_Text_ln
     _UART_Write
     _UART_Write_Text
       _UART_Write
   _UART_Write_ln
     _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jul 03 15:08:20 2024

                         pc 0002                          l11 0751                          l14 075B  
                        l23 07A8                          l32 074F                          l17 0783  
                        l26 076F                          l29 0748                          u10 0757  
                        u11 0756                          u30 074E                          u31 074D  
                        u80 07A8                          u81 07A7                          u90 07D1  
                        u91 07D0                          fsr 0004                         l622 0751  
                       l710 0795                         l624 0757                         l712 079B  
                       l720 07A9                         l642 0748                         l706 0785  
                       l714 075D                         l634 0771                         l730 07BA  
                       l722 07AD                         l644 074E                         l708 0788  
                       l716 0763                         l740 07C4                         l732 07BB  
                       l724 07B0                         l718 0769                         l750 07DD  
                       l742 07C5                         l734 07BF                         l726 07B5  
                       l760 07F4                         l752 07DE                         l744 07CB  
                       l736 07C0                         l728 07B7                         l762 07F5  
                       l746 07D1                         l754 07E2                         l738 07C1  
                       l756 07E8                         l748 07D7                         l758 07EE  
                       u100 07E8                         u101 07E7                         fsr0 0004  
                      STR_1 000C                        STR_2 0009                        _RCIF 0065  
                      _TRMT 04C1                        _main 07A9                        btemp 007E  
                      start 0000     __end_of_UART_Write_Text 07A9                       ?_main 0070  
                     _CMCON 009C                       _RCREG 001A                       _SPBRG 0099  
                     _PORTB 0006                       _PORTC 0007                       _TRISB 0086  
                     _TRISC 0087                       _TXREG 0019                 ?_UART_Write 0070  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 07FC                __end_of_main 07FC                      ??_main 0075  
                    _ADCON0 001F                      _ADCON1 009F           __end_of_UART_Read 0750  
          ?_UART_Write_Text 0070     __end_of__initialization 07FC       __end_of_UART_Write_ln 0784  
            __pcstackCOMMON 0070                  __pnvCOMMON 0075                  __pmaintext 07A9  
__end_of_UART_Write_Text_ln 0770                ??_UART_Write 0070                  __stringtab 0003  
        __end_of_UART_Write 075C                     __ptext1 0770                     __ptext2 075C  
                   __ptext3 0784                     __ptext4 0750                     __ptext5 0748  
                   _uart_rd 0075        end_of_initialization 07FC                   _RCSTAbits 0018  
                 _UART_Read 0748                   _PORTBbits 0006              UART_Write@data 0070  
                 _TXSTAbits 0098                  ?_UART_Read 0070         start_initialization 07FC  
                 ___latbits 0002          _UART_Write_Text_ln 075C         ?_UART_Write_Text_ln 0070  
               ??_UART_Read 0070                   __pstrings 0003        ??_UART_Write_Text_ln 0074  
         ??_UART_Write_Text 0071               _UART_Write_ln 0770                 __stringbase 0008  
            ?_UART_Write_ln 0070          __end_of__stringtab 0009         UART_Write_Text@text 0073  
    UART_Write_Text_ln@text 0074             ??_UART_Write_ln 0071                   stringcode 0003  
           _UART_Write_Text 0784                    stringdir 0003                    stringtab 0003  
                _UART_Write 0750           UART_Write_ln@data 0071            UART_Write_Text@i 0071  
